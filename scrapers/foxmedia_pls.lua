-- —Å–∫—Ä–∞–ø–µ—Ä TVS –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞—Ç–µ–∫–∏ "FoxTV" http://pa.fox-tv.fun/ (23/06/21)
-- –ª–æ–≥–∏–Ω, –ø–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ 'Password Manager', –¥–ª—è id - FOX
-- ## –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª—ã ##
	local filter = {
	{'–ù–∞—É–∫–∞', '–ù–∞—É–∫–∞ UA'},
	}
	module('foxmedia_pls', package.seeall)
	local my_src_name = 'Foxmedia ($)'
	local function ProcessFilterTableLocal(t)
		if not type(t) == 'table' then return end
		for i = 1, #t do
			t[i].name = tvs_core.tvs_clear_double_space(t[i].name)
			for _, ff in ipairs(filter) do
				if (type(ff) == 'table' and t[i].name == ff[1]) then
					t[i].name = ff[2]
				end
			end
		end
	 return t
	end

local function ProcessLogoGroupTableLocal(group)
		local gn = {

		{"–§–∏–ª—å–º—ã –°–°–°–†","fox=–§–∏–ª—å–º—ã –°–°–°–†","http://m24.do.am/images/sssr.png"},
		{"–î–µ—Ç—Å–∫–æ–µ –∫–∏–Ω–æ –°–°–°–†","fox=–î–µ—Ç—Å–∫–æ–µ –∫–∏–Ω–æ –°–°–°–†","http://m24.do.am/images/kidsssr.png"},
		{"–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã –°–°–°–†","fox=–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã –°–°–°–†","http://m24.do.am/images/kids.png"},
		{"–ù–∞—à–µ –∫–∏–Ω–æ","fox=–ù–∞—à–µ –∫–∏–Ω–æ","http://m24.do.am/images/nashek.png"},
		{"–ò–Ω–¥–∏–π—Å–∫–∏–µ —Ñ–∏–ª—å–º—ã","fox=–ò–Ω–¥–∏–π—Å–∫–∏–µ —Ñ–∏–ª—å–º—ã","http://m24.do.am/images/india.png"},
		{"–†–µ–ª–∞–∫—Å","fox=–†–µ–ª–∞–∫—Å","http://m24.do.am/images/relax.png"},
		{"Fox –ö–∏–Ω–æ–∑–∞–ª—ã","fox=Fox –ö–∏–Ω–æ–∑–∞–ª—ã","http://m24.do.am/images/mix.png"},
		{"–°–µ—Ä–∏–∞–ª—ã","fox=–°–µ—Ä–∏–∞–ª—ã","http://m24.do.am/images/serials.png"},
		{"–ú—É–∑—ã–∫–∞","fox=–ú—É–∑—ã–∫–∞","http://m24.do.am/images/musicico.ico"},
		{"–°–∫–∞–∑–∫–∏","fox=–°–∫–∞–∑–∫–∏","http://m24.do.am/images/skazki.png"},
		{"–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã","fox=–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã","http://m24.do.am/Logo/mult.png"},
		{"4K —Ñ–∏–ª—å–º—ã","fox=4K —Ñ–∏–ª—å–º—ã","http://m24.do.am/images/4k.png"},
		{"–§—ç–Ω—Ç–µ–∑–∏","fox=–§—ç–Ω—Ç–µ–∑–∏","http://m24.do.am/Logo/fehntezi.png"},
		{"–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞","fox=–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞","http://m24.do.am/Logo/fantastika.png"},
		{"–£–∂–∞—Å—ã","fox=–£–∂–∞—Å—ã","http://m24.do.am/images/fear.png"},
		{"–¢—Ä–∏–ª–ª–µ—Ä","fox=–¢—Ä–∏–ª–ª–µ—Ä","http://m24.do.am/Logo/thiller.png"},
		{"–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ","fox=–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ","http://m24.do.am/images/sport.png"},
		{"–°–µ–º–µ–π–Ω—ã–π","fox=–°–µ–º–µ–π–Ω—ã–π","http://m24.do.am/images/family.png"},
		{"–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è","fox=–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è","http://m24.do.am/images/adventure.png"},
		{"–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å–º","fox=–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å–º","http://m24.do.am/images/musicle.png"},
		{"–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π","fox=–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π","http://m24.do.am/images/crime.png"},
		{"–ö–æ–º–∏–∫—Å—ã","fox=–ö–æ–º–∏–∫—Å—ã","http://m24.do.am/images/comix.png"},
		{"–ö–æ–º–µ–¥–∏—è","fox=–ö–æ–º–µ–¥–∏—è","http://m24.do.am/images/comedy.png"},
		{"–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π","fox=–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π","http://m24.do.am/images/history.png"},
		{"–î—Ä–∞–º—ã","fox=–î—Ä–∞–º—ã","http://m24.do.am/images/drama.png"},
		{"–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π","fox=–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π","http://m24.do.am/images/biograf.png"},
		{"–î–µ—Ç–µ–∫—Ç–∏–≤","fox=–î–µ—Ç–µ–∫—Ç–∏–≤","http://m24.do.am/images/Detective.png"},
		{"–í–æ–µ–Ω–Ω—ã–µ","fox=–í–æ–µ–Ω–Ω—ã–µ","http://m24.do.am/images/war.png"},
		{"–í–µ—Å—Ç–µ—Ä–Ω","fox=–í–µ—Å—Ç–µ—Ä–Ω","http://m24.do.am/images/western.png"},
		{"–ë–æ–µ–≤–∏–∫","fox=–ë–æ–µ–≤–∏–∫","http://m24.do.am/images/boevik.png"},
		{"–ë–∏–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π","fox=–ë–∏–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π","http://m24.do.am/images/biograf.png"},
		{"–ê–Ω–∏–º–µ","fox=–ê–Ω–∏–º–µ","http://m24.do.am/images/anime.png"},
		}

		local gt, logogroup = {}, './luaScr/user/westSide/icons/foxmedia.png'
  for gi=1,#gn do
    gt[gi] = {}
    gt[gi].GName = gn[gi][1]
    gt[gi].GAction = gn[gi][2]
	gt[gi].GLogo = gn[gi][3]
	if gn[gi][1] == group then
	logogroup = gn[gi][3]
	end
  end
  return logogroup
end

	function GetSettings()
	local scrap_settings = {name = my_src_name, sortname = '', scraper = '', m3u = 'out_' .. my_src_name .. '.m3u', logo = '../Channel/logo/icons/foxmedia.png', TypeSource = 1, TypeCoding = 1, DeleteM3U = 0, RefreshButton = 0, AutoBuild = 0, show_progress = 1, AutoBuildDay = {0, 0, 0, 0, 0, 0, 0}, LastStart = 0, TVS = {add = 0, FilterCH = 0, FilterGR = 0,GetGroup = 0, LogoTVG = 0}, STV = {add = 1, ExtFilter = 0, FilterCH = 0, FilterGR = 0, GetGroup = 1, HDGroup = 0, AutoSearch = 0, AutoNumber = 0, NumberM3U = 0, GetSettings = 1, NotDeleteCH = 0, TypeSkip = 1, TypeFind = 1, TypeMedia = 3}}
	 return scrap_settings
	end
	function GetVersion()
	 return 2, 'UTF-8'
	end
	local function LoadFromSite()
		local url
			local res, login, password, header = xpcall(function() require('pm') return pm.GetPassword('FOX') end, err)
		if not login or not password or login == '' or password == '' then return
		m_simpleTV.OSD.ShowMessageT({imageParam = 'vSizeFactor="1.0" src="' .. m_simpleTV.Common.GetMainPath(2) .. './work/Channel/logo/icons/foxmedia.png"', text = ' –í–Ω–µ—Å–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä–µ –ø–∞—Ä–æ–ª–µ–π –¥–ª—è ID FOX', color = ARGB(255, 255, 255, 255), showTime = 1000 * 60})
		else
		url = 'http://pl.etvs.live/' .. login
					.. '/' .. password
					.. '/vodall.m3u'
		end

		local session = m_simpleTV.Http.New('Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,like Gecko) Chrome/81.0.3785.143 Safari/537.36')
			if not session then return end
		m_simpleTV.Http.SetTimeout(session, 8000)
		local rc, answer = m_simpleTV.Http.Request(session, {url = url})
		m_simpleTV.Http.Close(session)
			if rc ~= 200 then return end
				answer = answer .. '\n'
		local t, i = {}, 1

			for w in answer:gmatch('%#EXTINF:.-\n.-\n') do
				local title = w:match(',(.-)\n')
				local adr = w:match('\n(.-)\n')
				local logo = w:match('tvg%-logo="(.-)"')
					if not adr or not title then break end
				t[i] = {}
				t[i].name = title				
				adr = adr:gsub('password=.-&', 'password=' .. password .. '&')
				adr = adr:gsub('username=.-&', 'username=' .. login .. '&')
				adr = adr:gsub('/video%.', '/index.')
				t[i].address = adr
				t[i].RawM3UString = w:match('%d+(.-),')
				t[i].group = w:match('group%-title="([^"]+)')
				if t[i].name:match('Fox –°–µ—Ä–∏–∞–ª—ã') or t[i].name:match('Fox –ö–∏–Ω–æ–∑–∞–ª')
				then
				t[i].name = t[i].name:gsub(' /.-$', '')
				t[i].group = 'Fox –ö–∏–Ω–æ–∑–∞–ª—ã'
				end
				if t[i].name:match('–ì–æ–¥–∑–∏–ª–ª–∞ 2')
				then
				t[i].group = '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è'
				end
				if t[i].name:match('–î–µ—Ç—Å–∫–∞—è –∏–≥—Ä–∞')
				then
				t[i].group = '–¢—Ä–∏–ª–ª–µ—Ä'
				end
				if t[i].name:match('Deja Vu 2006')
				then
				t[i].group = '–¢—Ä–∏–ª–ª–µ—Ä'
				end
				if t[i].name:match('–í –°–µ–≤–∫–∞–±–µ–ª–µ')
				then
				t[i].group = '–ú—É–∑—ã–∫–∞'
				end
				t[i].group_logo = ProcessLogoGroupTableLocal(t[i].group)

				name = t[i].name
-- –ö–∏–Ω–æ—Ü–∏–∫–ª—ã
							if name:match('–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä') or name:match('–§–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–≤–∞—Ä–∏')
							then t[i].group = 'üìΩ –í—Å–µ–ª–µ–Ω–Ω–∞—è –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–∞'
							t[i].group_logo = '../Channel/Logo/banners/MK/üìΩ –í—Å–µ–ª–µ–Ω–Ω–∞—è –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–∞.png'
							end
							if name:match('–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü') or name:match('–•–æ–±–±–∏—Ç')
							then t[i].group = 'üìΩ –í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü ‚öú –•–æ–±–±–∏—Ç'
							t[i].group_logo = '../Channel/Logo/banners/MK/üìΩ –í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü ‚öú –•–æ–±–±–∏—Ç.png'
							end
							if name:match('–ó–≤—ë–∑–¥–Ω—ã–µ –≤–æ–π–Ω—ã')
							then t[i].group = 'üìΩ –ó–≤—ë–∑–¥–Ω—ã–µ –≤–æ–π–Ω—ã'
							t[i].group_logo = '../Channel/Logo/banners/MK/üìΩ –ó–≤—ë–∑–¥–Ω—ã–µ –≤–æ–π–Ω—ã.png'
							end
							if name:match('–õ—é–¥–∏ –ò–∫—Å') or name:match('–†–æ—Å–æ–º–∞—Ö–∞') or name:match('–î—ç–¥–ø—É–ª') or name:match('–õ–æ–≥–∞–Ω') and not name:match('–£–¥–∞—á–∞ –õ–æ–≥–∞–Ω–∞')
							then t[i].group = 'üìΩ –õ—é–¥–∏ –ò–∫—Å'
							t[i].group_logo = '../Channel/Logo/banners/MK/üìΩ –õ—é–¥–∏ –ò–∫—Å.png'
							end
-- –í—Å–µ–ª–µ–Ω–Ω–∞—è Marvel
							if name:match('–ñ–µ–ª–µ–∑–Ω—ã–π —á–µ–ª–æ–≤–µ–∫')
                            or name:match('–ù–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π –•–∞–ª–∫')
                            or name:match('Thor') and not name:match('–õ–µ–≥–µ–Ω–¥–∞ –≤–∏–∫–∏–Ω–≥–æ–≤')
                            or name:match('–ü–µ—Ä–≤—ã–π –º—Å—Ç–∏—Ç–µ–ª—å')
							or name:match('–ú—Å—Ç–∏—Ç–µ–ª–∏')
                            or name:match('–¢–æ—Ä 2%: –¶–∞—Ä—Å—Ç–≤–æ —Ç—å–º—ã')
                            or name:match('–ü–µ—Ä–≤—ã–π –º—Å—Ç–∏—Ç–µ–ª—å%: –î—Ä—É–≥–∞—è –≤–æ–π–Ω–∞')
                            or name:match('–°—Ç—Ä–∞–∂–∏ –ì–∞–ª–∞–∫—Ç–∏–∫–∏')
                            or name:match('–ú—Å—Ç–∏—Ç–µ–ª–∏: –≠—Ä–∞ –ê–ª—å—Ç—Ä–æ–Ω–∞')
							or name:match('–ß–µ–ª–æ–≤–µ–∫%-–º—É—Ä–∞–≤–µ–π')
                            or name:match('–ü–µ—Ä–≤—ã–π –º—Å—Ç–∏—Ç–µ–ª—å%: –ü—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è–Ω–∏–µ')
                            or name:match('–î–æ–∫—Ç–æ—Ä –°—Ç—Ä—ç–Ω–¥–∂')
                            or name:match('–°—Ç—Ä–∞–∂–∏ –ì–∞–ª–∞–∫—Ç–∏–∫–∏%. –ß–∞—Å—Ç—å 2')
                            or name:match('–¢–æ—Ä%: –†–∞–≥–Ω–∞—Ä—ë–∫')
                            or name:match('–ß—ë—Ä–Ω–∞—è –ü–∞–Ω—Ç–µ—Ä–∞')
                            or name:match('–ú—Å—Ç–∏—Ç–µ–ª–∏%: –í–æ–π–Ω–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏')
							or name:match('–ö–∞–ø–∏—Ç–∞–Ω –ú–∞—Ä–≤–µ–ª')
                            or name:match('–ú—Å—Ç–∏—Ç–µ–ª–∏%: –§–∏–Ω–∞–ª')
                            or name:match('–ß–µ–ª–æ–≤–µ–∫%-–ø–∞—É–∫')
							or name:match('–ß—É–¥–æ%-–∂–µ–Ω—â–∏–Ω–∞')
							or name:match('–õ–∏–≥–∞ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏')
							then t[i].group = 'üìΩ –í—Å–µ–ª–µ–Ω–Ω–∞—è Marvel'
							t[i].group_logo = '../Channel/Logo/banners/MK/üìΩ –í—Å–µ–ª–µ–Ω–Ω–∞—è Marvel.png'
							end

-- –ë–æ–Ω–¥–∏–∞–Ω–∞
							if name:match('–î–æ–∫—Ç–æ—Ä –ù–æ—É')
							or name:match('–ò–∑ –†–æ—Å—Å–∏–∏ —Å –ª—é–±–æ–≤—å—é')
							or name:match('–ì–æ–ª–¥—Ñ–∏–Ω–≥–µ—Ä')
							or name:match('–®–∞—Ä–æ–≤–∞—è –º–æ–ª–Ω–∏—è')
							or name:match('–ñ–∏–≤—ë—à—å —Ç–æ–ª—å–∫–æ –¥–≤–∞–∂–¥—ã')
							or name:match('–ù–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–π —Å–ª—É–∂–±–µ –µ–µ –í–µ–ª–∏—á–µ—Å—Ç–≤–∞')
							or name:match('–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç—ã –Ω–∞–≤—Å–µ–≥–¥–∞')
							or name:match('–ñ–∏–≤–∏ –∏ –¥–∞–π —É–º–µ—Ä–µ—Ç—å')
							or name:match('–ß–µ–ª–æ–≤–µ–∫ —Å –∑–æ–ª–æ—Ç—ã–º –ø–∏—Å—Ç–æ–ª–µ—Ç–æ–º')
							or name:match('–®–ø–∏–æ–Ω%, –∫–æ—Ç–æ—Ä—ã–π –º–µ–Ω—è –ª—é–±–∏–ª')
							or name:match('–õ—É–Ω–Ω—ã–π –≥–æ–Ω—â–∏–∫')
							or name:match('–¢–æ–ª—å–∫–æ –¥–ª—è —Ç–≤–æ–∏—Ö –≥–ª–∞–∑')
							or name:match('–û—Å—å–º–∏–Ω–æ–∂–∫–∞')
							or name:match('–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –≥–æ–≤–æ—Ä–∏ –Ω–∏–∫–æ–≥–¥–∞')
							or name:match('–í–∏–¥ –Ω–∞ —É–±–∏–π—Å—Ç–≤–æ')
							or name:match('–ò—Å–∫—Ä—ã –∏–∑ –≥–ª–∞–∑')
							or name:match('–õ–∏—Ü–µ–Ω–∑–∏—è –Ω–∞ —É–±–∏–π—Å—Ç–≤–æ')
							or name:match('–ó–æ–ª–æ—Ç–æ–π –ì–ª–∞–∑')
							or name:match('–ó–∞–≤—Ç—Ä–∞ –Ω–µ —É–º—Ä—ë—Ç –Ω–∏–∫–æ–≥–¥–∞')
							or name:match('–ò —Ü–µ–ª–æ–≥–æ –º–∏—Ä–∞ –º–∞–ª–æ')
							or name:match('–£–º—Ä–∏%, –Ω–æ –Ω–µ —Å–µ–π—á–∞—Å')
							or name:match('–ö–∞–∑–∏–Ω–æ –†–æ—è–ª—å')
							or name:match('–ö–≤–∞–Ω—Ç –º–∏–ª–æ—Å–µ—Ä–¥–∏—è')
							or name:match('–°–∫–∞–π—Ñ–æ–ª–ª')
							or name:match('–°–ø–µ–∫—Ç—Ä ')
							or name:match('–ù–µ –≤—Ä–µ–º—è —É–º–∏—Ä–∞—Ç—å')
							then t[i].group = 'üìΩ –ë–æ–Ω–¥–∏–∞–Ω–∞'
							t[i].group_logo = '../Channel/Logo/banners/MK/üìΩ –ë–æ–Ω–¥–∏–∞–Ω–∞.png'
							end
							t[i].group_is_unique = 1
				i = i + 1
			end
			if i == 1 then return end
	 return t
	end
	function GetList(UpdateID, m3u_file)
			if not UpdateID then return end
			if not m3u_file then return end
			if not TVSources_var.tmp.source[UpdateID] then return end
		local Source = TVSources_var.tmp.source[UpdateID]
		local t_pls = LoadFromSite()
			if not t_pls then
				m_simpleTV.OSD.ShowMessageT({text = Source.name .. ' –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞'
											, color = ARGB(255, 255, 100, 0)
											, showTime = 1000 * 5
											, id = 'channelName'})
			 return
			end
			if t_pls == 0 then
				m_simpleTV.OSD.ShowMessageT({text = '–ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å\n–≤ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ "Password Manager"\–¥–ª—è id - FOX'
											, color = ARGB(255, 255, 100, 0)
											, showTime = 1000 * 5
											, id = 'channelName'})
			 return
			end
		m_simpleTV.OSD.ShowMessageT({text = Source.name .. ' (' .. #t_pls .. ')'
									, color = ARGB(255, 155, 255, 155)
									, showTime = 1000 * 5
									, id = 'channelName'})
		t_pls = ProcessFilterTableLocal(t_pls)
		local m3ustr = tvs_core.ProcessFilterTable(UpdateID, Source, t_pls)
		local handle = io.open(m3u_file, 'w+')
			if not handle then return end
		handle:write(m3ustr)
		handle:close()
	 return 'ok'
	end
-- debug_in_file(#t_pls .. '\n')