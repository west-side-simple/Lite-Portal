-- —Å–∫—Ä–∞–ø–µ—Ä TVS –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞ "–°–µ—Ä–∏–∞–ª—ã 2" (13/01/22)
-- base script nexterr, mod west_side
-- ## –Ω–µ–æ–±—Ö–æ–¥–∏–º ##
-- –≤–∏–¥–æ—Å–∫—Ä–∏–ø—Ç: videocdn.lua
-- ##
	module('serials_kinopoisk_2_pls', package.seeall)
	local my_src_name = '–°–µ—Ä–∏–∞–ª—ã 2'
	function GetSettings()
	 return {name = my_src_name, sortname = '', scraper = '', m3u = 'out_' .. my_src_name .. '.m3u', logo = '..\\Channel\\logo\\Icons\\serials.png', TypeSource = 1, TypeCoding = 1, DeleteM3U = 0, RefreshButton = 0, AutoBuild = 0, show_progress = 1, AutoBuildDay = {0, 0, 0, 0, 0, 0, 0}, LastStart = 0, TVS = {add = 0, FilterCH = 0, FilterGR = 0, GetGroup = 0, LogoTVG = 0}, STV = {add = 1, ExtFilter = 0, FilterCH = 0, FilterGR = 0, GetGroup = 1, HDGroup = 0, AutoSearch = 0, AutoNumber = 0, NumberM3U = 0, GetSettings = 1, NotDeleteCH = 0, TypeSkip = 1, TypeFind = 1, TypeMedia = 3}}
	end
	function GetVersion()
	 return 2, 'UTF-8'
	end
	local function showMess(str, color, showT)
		local t = {text = 'üéû ' .. str, color = color, showTime = showT or (1000 * 5), id = 'channelName'}
		m_simpleTV.OSD.ShowMessageT(t)
	end
	local function LoadFromSite()
		require 'json'
		local session = m_simpleTV.Http.New('Mozilla/5.0 (Windows NT 10.0; rv:85.0) Gecko/20100101 Firefox/85.0')
			if not session then return end
		m_simpleTV.Http.SetTimeout(session, 8000)
--		showMess('¬´–°–µ—Ä–∏–∞–ª—ã 2¬ª –∑–∞–≥—Ä—É–∑–∫–∞ ...', ARGB(255, 153, 255, 153), 1200000)
		local t, i = {}, 1
			local function getTbl(t, k, tab)
				local j = 1
					while tab.data[j] and tab.data[j].iframe_src do
						local kinopoisk_id = tab.data[j].kinopoisk_id or ''
						
						local adr = tab.data[j].iframe_src

							t[k] = {}
							t[k].address = 'https:' .. adr:gsub('^https%:', '')
							if kinopoisk_id ~= '' then
							t[k].logo = string.format('https://st.kp.yandex.net/images/film_iphone/iphone360_%s.jpg', kinopoisk_id)
							end
							local year = tab.data[j].start_date or '0'
							year = year:match('(%d+)%-')
							year = year:gsub('2918', '2018')
							if tonumber(year) <= 1950 then t[k].group = '1950 –≥–æ–¥–∞ –∏ —Ä–∞–Ω–µ–µ' end
							if tonumber(year) > 1950 and tonumber(year) <= 1970  then t[k].group = '1951 - 1970 –≥–æ–¥–∞' end
							if tonumber(year) > 1970 and tonumber(year) <= 1980  then t[k].group = '1971 - 1980 –≥–æ–¥–∞' end
							if tonumber(year) > 1980 and tonumber(year) <= 1991  then t[k].group = '1981 - 1991 –≥–æ–¥–∞' end
							if tonumber(year) > 1991 and tonumber(year) <= 2000  then t[k].group = '1992 - 2000 –≥–æ–¥–∞' end
							if tonumber(year) > 2000 and tonumber(year) <= 2005  then t[k].group = '2001 - 2005 –≥–æ–¥–∞' end
							if tonumber(year) > 2005 and tonumber(year) <= 2010  then t[k].group = '2006 - 2010 –≥–æ–¥–∞' end
							if tonumber(year) > 2010 and tonumber(year) <= 2015  then t[k].group = '2011 - 2015 –≥–æ–¥–∞' end
							if tonumber(year) == 2016 then t[k].group = '2016 –≥–æ–¥–∞' end
							if tonumber(year) == 2017 then t[k].group = '2017 –≥–æ–¥–∞' end
							if tonumber(year) == 2018 then t[k].group = '2018 –≥–æ–¥–∞' end
							if tonumber(year) == 2019 then t[k].group = '2019 –≥–æ–¥–∞' end
							if tonumber(year) == 2020 then t[k].group = '2020 –≥–æ–¥–∞' end
							if tonumber(year) > 2020 then t[k].group = '2021 –≥–æ–¥–∞ –∏ –¥–∞–ª–µ–µ' end

							t[k].name = tab.data[j].ru_title:gsub('"', '%%22')
							t[k].name = t[k].name .. ' (' .. year .. ')'
							local n, t1 = 1, {}
							while true do
							if not (tab.data[j].translations and tab.data[j].translations[n] and tab.data[j].translations[n].title) then break end

							t1[n] = {}
							t1[n].perevod = tab.data[j].translations[n].title
							if t1[n].perevod:match('–ö—É–±–∏–∫') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –ö—É–±–∏–∫ –≤ –ö—É–±–µ' end
							if t1[n].perevod:match('–ì–æ–±–ª–∏–Ω') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –ì–æ–±–ª–∏–Ω–∞' end
							if t1[n].perevod:match('–ö—É—Ä–∞–∂') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –ö—É—Ä–∞–∂-–ë–∞–º–±–µ–π' end
							if t1[n].perevod:match('–ö–∞—Ä—Ü–µ–≤') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –ö–∞—Ä—Ü–µ–≤' end
							if t1[n].perevod:match('–°–∞–Ω–∞–µ–≤') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –°–∞–Ω–∞–µ–≤' end
							if t1[n].perevod:match('–î–æ–ª—å—Å–∫–∏–π') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –î–æ–ª—å—Å–∫–∏–π' end
							if t1[n].perevod:match('–ú–∏—Ö–∞–ª—ë–≤') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –ú–∏—Ö–∞–ª—ë–≤' end
							if t1[n].perevod:match('–•–ª–æ–ø—É—à–∫–∞') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –•–ª–æ–ø—É—à–∫–∞' end
							if t1[n].perevod:match('–ì–ª–∞–Ω—Ü') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –ì–ª–∞–Ω—Ü –∏ –ö–æ—Ä–æ–ª–µ–≤–∞' end
							if t1[n].perevod:match('–°–µ—Ä–±–∏–Ω') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –°–µ—Ä–±–∏–Ω' end
							if t1[n].perevod:match('–í–æ–ª–æ–¥–∞—Ä—Å–∫–∏–π') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –í–æ–ª–æ–¥–∞—Ä—Å–∫–∏–π' end
							if t1[n].perevod:match('–ú–∏—à–∏–Ω') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –ú–∏—à–∏–Ω' end
							if t1[n].perevod:match('–ì–∞–≤—Ä–∏–ª–æ–≤') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –ì–∞–≤—Ä–∏–ª–æ–≤' end
							if t1[n].perevod:match('–í–∏–∑–≥—É–Ω–æ–≤') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –í–∏–∑–≥—É–Ω–æ–≤' end
							if t1[n].perevod:match('–ì–æ—Ä—á–∞–∫–æ–≤') then t[k].group = '–ü–µ—Ä–µ–≤–æ–¥—ã –ì–æ—Ä—á–∞–∫–æ–≤' end

							n = n + 1

							end

							if kinopoisk_id == '' and imdb_id == '' then t[k].group = '–ë–µ–∑ ID' end
							if kinopoisk_id == '' and imdb_id ~= '' then t[k].group = '–ë–µ–∑ ID –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞' end
							if kinopoisk_id ~= '' and imdb_id == '' then t[k].group = '–ë–µ–∑ ID IMDb' end

							

							k = k + 1

						j = j + 1
					end
			 return t, k
			end
			for c = 1, 600 do
			if c==1 then t1=os.time() end
				local url = string.format(decode64('aHR0cHM6Ly92aWRlb2Nkbi50di9hcGkvdHYtc2VyaWVzP2FwaV90b2tlbj1XMk52TDg2YTM0S2cyb0pYTVRmOHE2N2dzZ2tLdXphcCZsaW1pdD0yNSZwYWdlPSVz'), c)
				local rc, answer = m_simpleTV.Http.Request(session, {url = url})
				if rc == 200 and answer:match('"id"') then
				if c==1 then t1=os.time() inpage = answer:match('last_page_url.-page=(%d+)') end
					answer = answer:gsub('%[%]', '""')
					local tab = json.decode(answer)
					if tab and tab.data then
						t, i = getTbl(t, i, tab)
					end
				else
				t2=os.time()
				m_simpleTV.OSD.ShowMessageT({imageParam = 'vSizeFactor="1.0" src="' .. m_simpleTV.Common.GetMainPath(2) .. './luaScr/user/westSide/icons/poisk.png"', text = '–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ ' .. t2-t1 .. ' —Å–µ–∫. –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞', color = ARGB(255, 255, 255, 255), showTime = 1000 * 60})
				 break
				end
				m_simpleTV.OSD.ShowMessageT({imageParam = 'vSizeFactor="1.0" src="' .. m_simpleTV.Common.GetMainPath(2) .. './luaScr/user/westSide/progress1/p' .. math.floor(c/inpage*100+0.5) .. '.png"', text = ' - –æ–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏: ' .. c, color = ARGB(255, 255, 255, 255), showTime = 1000 * 60})
			end
		m_simpleTV.Http.Close(session)
			if #t == 0 then return end
			local t1 = table_reverse (t)
			for a = 1,#t1 do
			if a<=20
			then
			t1[a].group = '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è'
			end
			end
	 return t1
	end
	function GetList(UpdateID, m3u_file)
			if not UpdateID then return end
			if not m3u_file then return end
			if not TVSources_var.tmp.source[UpdateID] then return end
		local Source = TVSources_var.tmp.source[UpdateID]
		local t_pls = LoadFromSite()
			if not t_pls then
				showMess(Source.name .. ': –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞', ARGB(255, 255, 102, 0))
			 return
			end
		showMess(Source.name .. ' (' .. #t_pls .. ')', ARGB(255, 255, 255, 255))
		local m3ustr = tvs_core.ProcessFilterTable(UpdateID, Source, t_pls)
		local handle = io.open(m3u_file, 'w+')
			if not handle then return end
		handle:write(m3ustr)
		handle:close()
	 return 'ok'
	end
-- debug_in_file(#t_pls .. '\n')